<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Menghao blog</title>
    <link>https://mengwoods.github.io/categories/tech/</link>
    <description>Recent content in Tech on Menghao blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright Â© 2024, Meng blog; all rights reserved.</copyright>
    <lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://mengwoods.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KITTI Dataset Introduction</title>
      <link>https://mengwoods.github.io/post/tech/007-kitti-introduction/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/007-kitti-introduction/</guid>
      <description>
        
          
            &lt;p&gt;KITTI Detailed Introduction&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Introduction to ROS2, Key Features and Common Commands</title>
      <link>https://mengwoods.github.io/post/tech/005-ros2/</link>
      <pubDate>Mon, 06 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/005-ros2/</guid>
      <description>
        
          
            &lt;p&gt;ROS2&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Dockerfile records</title>
      <link>https://mengwoods.github.io/post/tech/002-run-conda-in-dockerfile/</link>
      <pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/002-run-conda-in-dockerfile/</guid>
      <description>
        
          
            &lt;p&gt;Dockerfile examples&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Some Useful Docker Commands</title>
      <link>https://mengwoods.github.io/post/tech/003-some-docker-commands/en/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/003-some-docker-commands/en/</guid>
      <description>
        
          
            &lt;p&gt;The blog collects some useful Docker commands.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>MMDetection3D Library Installation Guide</title>
      <link>https://mengwoods.github.io/post/tech/001-install-openmm3d-lib/en/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/001-install-openmm3d-lib/en/</guid>
      <description>
        
          
            &lt;p&gt;Cuda, Conda, MMDetection3D installation and test.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Build Personal Blog with Hugo</title>
      <link>https://mengwoods.github.io/post/tech/000-build-hugo-site/en/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/000-build-hugo-site/en/</guid>
      <description>
        
          
            &lt;p&gt;Hugo, blog&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>GPU Architecture Overview</title>
      <link>https://mengwoods.github.io/post/tech/011-structure-of-gpu/</link>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://mengwoods.github.io/post/tech/011-structure-of-gpu/</guid>
      <description>
        
          
            CPU and GPU CPU is designed to excel at executing a sequence of operations, called a thread. It can execute a few tens of threads in parallel. General purpose, good for serial processing, great for task parallelism, large area dedicated cache and control. GPU is designed to excel at executing many thousands of them in parallel. Highly specialized for parallelism, good for parallel processing, great for data parallelism, high throughput, hundreds of floating point execution units.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
